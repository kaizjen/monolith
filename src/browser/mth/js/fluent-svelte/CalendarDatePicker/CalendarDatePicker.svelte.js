/* $svelte\fluent-svelte-raw\CalendarDatePicker\CalendarDatePicker.svelte generated by Svelte v3.46.4 */
import {
	SvelteComponent,
	add_flush_callback,
	append,
	append_styles,
	assign,
	attr,
	bind,
	binding_callbacks,
	compute_rest_props,
	create_component,
	destroy_component,
	detach,
	element,
	exclude_internal_props,
	get_spread_object,
	get_spread_update,
	init,
	insert,
	mount_component,
	safe_not_equal,
	set_data,
	space,
	svg_element,
	text,
	toggle_class,
	transition_in,
	transition_out
} from "mth://.svelte/internal";

import CalendarView from "../CalendarView/CalendarView.svelte";
import Flyout from "../Flyout/FlyoutWrapper.svelte";
import Button from "../Button/Button.svelte";

function add_css(target) {
	append_styles(target, "svelte-wlnjxr", ".calendar-date-picker-label.svelte-wlnjxr{-webkit-padding-end:2px;padding-inline-end:2px}.calendar-date-picker-label.placeholder.svelte-wlnjxr:not(.disabled){color:var(--fds-text-secondary)}.calendar-date-picker-icon.svelte-wlnjxr{fill:currentColor;-webkit-margin-start:8px;block-size:auto;color:currentColor;inline-size:12px;margin-inline-start:8px}");
}

// (22:1) <Button class="calendar-date-picker-button" {disabled}>
function create_default_slot_1(ctx) {
	let span;
	let t0_value = (/*value*/ ctx[0]?.toLocaleDateString(/*locale*/ ctx[2]) ?? /*placeholder*/ ctx[3]) + "";
	let t0;
	let t1;
	let svg;
	let path;

	return {
		c() {
			span = element("span");
			t0 = text(t0_value);
			t1 = space();
			svg = svg_element("svg");
			path = svg_element("path");
			attr(span, "class", "calendar-date-picker-label svelte-wlnjxr");
			toggle_class(span, "disabled", /*disabled*/ ctx[4]);
			toggle_class(span, "placeholder", typeof /*value*/ ctx[0] === "undefined" || /*value*/ ctx[0] === null);
			attr(path, "d", "M9.2793 0.75C9.47461 0.75 9.66016 0.791016 9.83594 0.873047C10.0156 0.951172 10.1719 1.05859 10.3047 1.19531C10.4414 1.32813 10.5488 1.48437 10.627 1.66406C10.709 1.83984 10.75 2.02539 10.75 2.2207V9.7793C10.75 9.97461 10.709 10.1621 10.627 10.3418C10.5488 10.5176 10.4414 10.6738 10.3047 10.8105C10.1719 10.9434 10.0156 11.0508 9.83594 11.1328C9.66016 11.2109 9.47461 11.25 9.2793 11.25H1.7207C1.52539 11.25 1.33789 11.2109 1.1582 11.1328C0.982422 11.0508 0.826172 10.9434 0.689453 10.8105C0.556641 10.6738 0.449219 10.5176 0.367188 10.3418C0.289062 10.1621 0.25 9.97461 0.25 9.7793V2.2207C0.25 2.02539 0.289062 1.83984 0.367188 1.66406C0.449219 1.48437 0.556641 1.32813 0.689453 1.19531C0.826172 1.05859 0.982422 0.951172 1.1582 0.873047C1.33789 0.791016 1.52539 0.75 1.7207 0.75H9.2793ZM1.75 1.5C1.64453 1.5 1.54688 1.51953 1.45703 1.55859C1.36719 1.59766 1.28711 1.65234 1.2168 1.72266C1.15039 1.78906 1.09766 1.86719 1.05859 1.95703C1.01953 2.04688 1 2.14453 1 2.25V3H10V2.25C10 2.14844 9.98047 2.05273 9.94141 1.96289C9.90234 1.86914 9.84766 1.78906 9.77734 1.72266C9.71094 1.65234 9.63086 1.59766 9.53711 1.55859C9.44727 1.51953 9.35156 1.5 9.25 1.5H1.75ZM9.25 10.5C9.35547 10.5 9.45312 10.4805 9.54297 10.4414C9.63281 10.4023 9.71094 10.3496 9.77734 10.2832C9.84766 10.2129 9.90234 10.1328 9.94141 10.043C9.98047 9.95312 10 9.85547 10 9.75V3.75H1V9.75C1 9.85547 1.01953 9.95508 1.05859 10.0488C1.09766 10.1387 1.15039 10.2168 1.2168 10.2832C1.2832 10.3496 1.36133 10.4023 1.45117 10.4414C1.54492 10.4805 1.64453 10.5 1.75 10.5H9.25ZM2.5 6C2.5 5.89453 2.51953 5.79688 2.55859 5.70703C2.59766 5.61719 2.65039 5.53906 2.7168 5.47266C2.78711 5.40234 2.86719 5.34766 2.95703 5.30859C3.05078 5.26953 3.15039 5.25 3.25586 5.25C3.36133 5.25 3.45898 5.26953 3.54883 5.30859C3.63867 5.34766 3.7168 5.40039 3.7832 5.4668C3.84961 5.5332 3.90234 5.61133 3.94141 5.70117C3.98047 5.79102 4 5.88867 4 5.99414C4 6.09961 3.98047 6.19922 3.94141 6.29297C3.90234 6.38281 3.84766 6.46289 3.77734 6.5332C3.71094 6.59961 3.63281 6.65234 3.54297 6.69141C3.45312 6.73047 3.35547 6.75 3.25 6.75C3.14453 6.75 3.04492 6.73047 2.95117 6.69141C2.86133 6.65234 2.7832 6.59961 2.7168 6.5332C2.65039 6.4668 2.59766 6.38867 2.55859 6.29883C2.51953 6.20508 2.5 6.10547 2.5 6ZM4.75 6C4.75 5.89453 4.76953 5.79688 4.80859 5.70703C4.84766 5.61719 4.90039 5.53906 4.9668 5.47266C5.03711 5.40234 5.11719 5.34766 5.20703 5.30859C5.30078 5.26953 5.40039 5.25 5.50586 5.25C5.61133 5.25 5.70898 5.26953 5.79883 5.30859C5.88867 5.34766 5.9668 5.40039 6.0332 5.4668C6.09961 5.5332 6.15234 5.61133 6.19141 5.70117C6.23047 5.79102 6.25 5.88867 6.25 5.99414C6.25 6.09961 6.23047 6.19922 6.19141 6.29297C6.15234 6.38281 6.09766 6.46289 6.02734 6.5332C5.96094 6.59961 5.88281 6.65234 5.79297 6.69141C5.70312 6.73047 5.60547 6.75 5.5 6.75C5.39453 6.75 5.29492 6.73047 5.20117 6.69141C5.11133 6.65234 5.0332 6.59961 4.9668 6.5332C4.90039 6.4668 4.84766 6.38867 4.80859 6.29883C4.76953 6.20508 4.75 6.10547 4.75 6ZM8.5 5.99414C8.5 6.09961 8.48047 6.19922 8.44141 6.29297C8.40234 6.38281 8.34766 6.46289 8.27734 6.5332C8.21094 6.59961 8.13281 6.65234 8.04297 6.69141C7.95312 6.73047 7.85547 6.75 7.75 6.75C7.64453 6.75 7.54492 6.73047 7.45117 6.69141C7.36133 6.65234 7.2832 6.59961 7.2168 6.5332C7.15039 6.4668 7.09766 6.38867 7.05859 6.29883C7.01953 6.20508 7 6.10547 7 6C7 5.89453 7.01953 5.79688 7.05859 5.70703C7.09766 5.61719 7.15039 5.53906 7.2168 5.47266C7.28711 5.40234 7.36719 5.34766 7.45703 5.30859C7.55078 5.26953 7.65039 5.25 7.75586 5.25C7.86133 5.25 7.95898 5.26953 8.04883 5.30859C8.13867 5.34766 8.2168 5.40039 8.2832 5.4668C8.34961 5.5332 8.40234 5.61133 8.44141 5.70117C8.48047 5.79102 8.5 5.88867 8.5 5.99414ZM4 8.25C4 8.35547 3.98047 8.45312 3.94141 8.54297C3.90234 8.63281 3.84766 8.71289 3.77734 8.7832C3.71094 8.84961 3.63086 8.90234 3.53711 8.94141C3.44727 8.98047 3.34961 9 3.24414 9C3.13867 9 3.04102 8.98047 2.95117 8.94141C2.86133 8.90234 2.7832 8.84961 2.7168 8.7832C2.65039 8.7168 2.59766 8.63867 2.55859 8.54883C2.51953 8.45898 2.5 8.36133 2.5 8.25586C2.5 8.15039 2.51953 8.05273 2.55859 7.96289C2.59766 7.86914 2.65039 7.78906 2.7168 7.72266C2.78711 7.65234 2.86719 7.59766 2.95703 7.55859C3.04688 7.51953 3.14453 7.5 3.25 7.5C3.35547 7.5 3.45312 7.51953 3.54297 7.55859C3.63672 7.59766 3.7168 7.65039 3.7832 7.7168C3.84961 7.7832 3.90234 7.86328 3.94141 7.95703C3.98047 8.04688 4 8.14453 4 8.25ZM6.25 8.25C6.25 8.35547 6.23047 8.45312 6.19141 8.54297C6.15234 8.63281 6.09766 8.71289 6.02734 8.7832C5.96094 8.84961 5.88086 8.90234 5.78711 8.94141C5.69727 8.98047 5.59961 9 5.49414 9C5.38867 9 5.29102 8.98047 5.20117 8.94141C5.11133 8.90234 5.0332 8.84961 4.9668 8.7832C4.90039 8.7168 4.84766 8.63867 4.80859 8.54883C4.76953 8.45898 4.75 8.36133 4.75 8.25586C4.75 8.15039 4.76953 8.05273 4.80859 7.96289C4.84766 7.86914 4.90039 7.78906 4.9668 7.72266C5.03711 7.65234 5.11719 7.59766 5.20703 7.55859C5.29688 7.51953 5.39453 7.5 5.5 7.5C5.60547 7.5 5.70312 7.51953 5.79297 7.55859C5.88672 7.59766 5.9668 7.65039 6.0332 7.7168C6.09961 7.7832 6.15234 7.86328 6.19141 7.95703C6.23047 8.04688 6.25 8.14453 6.25 8.25Z");
			attr(svg, "class", "calendar-date-picker-icon svelte-wlnjxr");
			attr(svg, "width", "12");
			attr(svg, "height", "12");
			attr(svg, "viewBox", "0 0 11 12");
			attr(svg, "fill", "none");
			attr(svg, "xmlns", "http://www.w3.org/2000/svg");
		},
		m(target, anchor) {
			insert(target, span, anchor);
			append(span, t0);
			insert(target, t1, anchor);
			insert(target, svg, anchor);
			append(svg, path);
		},
		p(ctx, dirty) {
			if (dirty & /*value, locale, placeholder*/ 13 && t0_value !== (t0_value = (/*value*/ ctx[0]?.toLocaleDateString(/*locale*/ ctx[2]) ?? /*placeholder*/ ctx[3]) + "")) set_data(t0, t0_value);

			if (dirty & /*disabled*/ 16) {
				toggle_class(span, "disabled", /*disabled*/ ctx[4]);
			}

			if (dirty & /*value*/ 1) {
				toggle_class(span, "placeholder", typeof /*value*/ ctx[0] === "undefined" || /*value*/ ctx[0] === null);
			}
		},
		d(detaching) {
			if (detaching) detach(span);
			if (detaching) detach(t1);
			if (detaching) detach(svg);
		}
	};
}

// (21:0) <Flyout placement="bottom" class="calendar-date-picker-container" bind:open>
function create_default_slot(ctx) {
	let button;
	let current;

	button = new Button({
			props: {
				class: "calendar-date-picker-button",
				disabled: /*disabled*/ ctx[4],
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			}
		});

	return {
		c() {
			create_component(button.$$.fragment);
		},
		m(target, anchor) {
			mount_component(button, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const button_changes = {};
			if (dirty & /*disabled*/ 16) button_changes.disabled = /*disabled*/ ctx[4];

			if (dirty & /*$$scope, disabled, value, locale, placeholder*/ 1053) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);
		},
		i(local) {
			if (current) return;
			transition_in(button.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(button.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(button, detaching);
		}
	};
}

// (43:1) 
function create_override_slot(ctx) {
	let calendarview;
	let updating_value;
	let current;

	const calendarview_spread_levels = [
		{ slot: "override" },
		{ class: "calendar-date-picker-calendar" },
		{ multiple: false },
		{ __floating: true },
		/*$$restProps*/ ctx[6]
	];

	function calendarview_value_binding(value) {
		/*calendarview_value_binding*/ ctx[7](value);
	}

	let calendarview_props = {};

	for (let i = 0; i < calendarview_spread_levels.length; i += 1) {
		calendarview_props = assign(calendarview_props, calendarview_spread_levels[i]);
	}

	if (/*value*/ ctx[0] !== void 0) {
		calendarview_props.value = /*value*/ ctx[0];
	}

	calendarview = new CalendarView({ props: calendarview_props });
	binding_callbacks.push(() => bind(calendarview, 'value', calendarview_value_binding));
	calendarview.$on("keydown", /*handleKeyDown*/ ctx[5]);
	calendarview.$on("change", /*change_handler*/ ctx[8]);

	return {
		c() {
			create_component(calendarview.$$.fragment);
		},
		m(target, anchor) {
			mount_component(calendarview, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const calendarview_changes = (dirty & /*$$restProps*/ 64)
			? get_spread_update(calendarview_spread_levels, [
					calendarview_spread_levels[0],
					calendarview_spread_levels[1],
					calendarview_spread_levels[2],
					calendarview_spread_levels[3],
					get_spread_object(/*$$restProps*/ ctx[6])
				])
			: {};

			if (!updating_value && dirty & /*value*/ 1) {
				updating_value = true;
				calendarview_changes.value = /*value*/ ctx[0];
				add_flush_callback(() => updating_value = false);
			}

			calendarview.$set(calendarview_changes);
		},
		i(local) {
			if (current) return;
			transition_in(calendarview.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(calendarview.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(calendarview, detaching);
		}
	};
}

function create_fragment(ctx) {
	let flyout;
	let updating_open;
	let current;

	function flyout_open_binding(value) {
		/*flyout_open_binding*/ ctx[9](value);
	}

	let flyout_props = {
		placement: "bottom",
		class: "calendar-date-picker-container",
		$$slots: {
			override: [create_override_slot],
			default: [create_default_slot]
		},
		$$scope: { ctx }
	};

	if (/*open*/ ctx[1] !== void 0) {
		flyout_props.open = /*open*/ ctx[1];
	}

	flyout = new Flyout({ props: flyout_props });
	binding_callbacks.push(() => bind(flyout, 'open', flyout_open_binding));

	return {
		c() {
			create_component(flyout.$$.fragment);
		},
		m(target, anchor) {
			mount_component(flyout, target, anchor);
			current = true;
		},
		p(ctx, [dirty]) {
			const flyout_changes = {};

			if (dirty & /*$$scope, $$restProps, value, open, disabled, locale, placeholder*/ 1119) {
				flyout_changes.$$scope = { dirty, ctx };
			}

			if (!updating_open && dirty & /*open*/ 2) {
				updating_open = true;
				flyout_changes.open = /*open*/ ctx[1];
				add_flush_callback(() => updating_open = false);
			}

			flyout.$set(flyout_changes);
		},
		i(local) {
			if (current) return;
			transition_in(flyout.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(flyout.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(flyout, detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	const omit_props_names = ["value","open","locale","placeholder","disabled"];
	let $$restProps = compute_rest_props($$props, omit_props_names);
	let { value } = $$props;
	let { open = false } = $$props;
	let { locale = undefined } = $$props;
	let { placeholder = "Pick a date" } = $$props;
	let { disabled = false } = $$props;

	function handleKeyDown(event) {
		event.stopPropagation();
		if (event.key === "Escape") $$invalidate(1, open = false);
	}

	function calendarview_value_binding(value$1) {
		value = value$1;
		$$invalidate(0, value);
	}

	const change_handler = () => $$invalidate(1, open = false);

	function flyout_open_binding(value) {
		open = value;
		$$invalidate(1, open);
	}

	$$self.$$set = $$new_props => {
		$$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
		$$invalidate(6, $$restProps = compute_rest_props($$props, omit_props_names));
		if ('value' in $$new_props) $$invalidate(0, value = $$new_props.value);
		if ('open' in $$new_props) $$invalidate(1, open = $$new_props.open);
		if ('locale' in $$new_props) $$invalidate(2, locale = $$new_props.locale);
		if ('placeholder' in $$new_props) $$invalidate(3, placeholder = $$new_props.placeholder);
		if ('disabled' in $$new_props) $$invalidate(4, disabled = $$new_props.disabled);
	};

	return [
		value,
		open,
		locale,
		placeholder,
		disabled,
		handleKeyDown,
		$$restProps,
		calendarview_value_binding,
		change_handler,
		flyout_open_binding
	];
}

class CalendarDatePicker extends SvelteComponent {
	constructor(options) {
		super();

		init(
			this,
			options,
			instance,
			create_fragment,
			safe_not_equal,
			{
				value: 0,
				open: 1,
				locale: 2,
				placeholder: 3,
				disabled: 4
			},
			add_css
		);
	}
}

export default CalendarDatePicker;